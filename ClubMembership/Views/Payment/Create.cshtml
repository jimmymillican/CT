@model ClubMembership.Models.MemberAccountPayment

@{
    ViewBag.Title = "Create";
}

<h2>Record Payment</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Record New Entry</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.MemberId, "Member", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("MemberId", null, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.MemberId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AccountId.AccountTypeId.Description, "Payment Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AccountId_MemberAccountId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentMethodId.Description, "Payment Type", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("PaymentMethodId_PaymentMethodId", null, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.PaymentMethodId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentStatusId.Description, "Payment Status", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("PaymentStatusId_PaymentStatusId", null, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.PaymentStatusId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>
     

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Record Payment" class="buttonStyleAdd" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
